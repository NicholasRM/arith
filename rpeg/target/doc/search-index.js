var searchIndex = JSON.parse('{\
"rpeg":{"doc":"","t":[0,0,0,0,5,5,3,11,11,12,12,11,11,12,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["codec","pixel_block","pixel_conversion","quantize","compress","decompress","PixelBlock","borrow","borrow_mut","bottom_left","bottom_right","clone","clone_into","col_position","deref","deref_mut","drop","from","init","into","pack","row_position","to_owned","top_left","top_right","try_from","try_into","type_id","unpack","float_to_rgb","get_compression_tuple","get_decompression_tuple","rgb_to_float","chroma_to_indices","coefficients_to_scaled_ints","construct_word","get_coefficients","get_luma","indices_to_chroma","parse_word","scaled_ints_to_coefficients","singular_coefficient_to_scaled_int","singular_scaled_int_to_coefficient"],"q":["rpeg","","","","rpeg::codec","","rpeg::pixel_block","","","","","","","","","","","","","","","","","","","","","","","rpeg::pixel_conversion","","","","rpeg::quantize","","","","","","","","",""],"d":["","","","","","","A struct containing a 2x2 block of RGB pixels and the …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Packs 4 pixels and the coordinates of the top left corner …","","","","","","","","Consumes the struct and returns a Vec of tuples containing …","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,[[["option",4,[["str",0]]]]],[[["option",4,[["str",0]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["pixelblock",3]],["pixelblock",3]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["usize",0],["usize",0],["rgb",3],["rgb",3],["rgb",3],["rgb",3]],["pixelblock",3]],null,[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["pixelblock",3]],["vec",3]],[[["f64",0]],["rgb",3]],[[]],[[]],[[["rgb",3],["f64",0]]],[[["f64",0],["f64",0]]],[[["f64",0],["f64",0],["f64",0]]],[[["u64",0],["i64",0],["i64",0],["i64",0],["u64",0],["u64",0]],["u32",0]],[[["f64",0],["f64",0],["f64",0],["f64",0]]],[[["f64",0],["f64",0],["f64",0],["f64",0]]],[[["u64",0],["u64",0]]],[[["u32",0]]],[[["i64",0],["i64",0],["i64",0]]],[[["f64",0]],["u64",0]],[[["u64",0]],["f64",0]]],"p":[[3,"PixelBlock"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
