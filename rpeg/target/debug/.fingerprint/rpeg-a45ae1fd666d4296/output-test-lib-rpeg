{"message":"unused imports: `indices_to_chroma`, `scaled_ints_to_coefficients`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/codec.rs","byte_start":102,"byte_end":106,"line_start":3,"line_end":3,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"use crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/codec.rs","byte_start":156,"byte_end":183,"line_start":3,"line_end":3,"column_start":81,"column_end":108,"is_primary":true,"text":[{"text":"use crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};","highlight_start":81,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/codec.rs","byte_start":185,"byte_end":202,"line_start":3,"line_end":3,"column_start":110,"column_end":127,"is_primary":true,"text":[{"text":"use crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};","highlight_start":110,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/codec.rs","byte_start":102,"byte_end":108,"line_start":3,"line_end":3,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"use crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/codec.rs","byte_start":154,"byte_end":202,"line_start":3,"line_end":3,"column_start":79,"column_end":127,"is_primary":true,"text":[{"text":"use crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};","highlight_start":79,"highlight_end":127}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `indices_to_chroma`, `scaled_ints_to_coefficients`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/codec.rs:3:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{pixel_block::{self, PixelBlock}, pixel_conversion, quantize::{self, scaled_ints_to_coefficients, indices_to_chroma}};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"function `compare_trio` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/quantize.rs","byte_start":3546,"byte_end":3558,"line_start":105,"line_end":105,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"    fn compare_trio(x: (f64, f64, f64), y: (f64, f64, f64)) -> bool{","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `compare_trio` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/quantize.rs:105:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn compare_trio(x: (f64, f64, f64), y: (f64, f64, f64)) -> bool{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
